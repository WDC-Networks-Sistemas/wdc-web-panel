"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/approvals/page",{

/***/ "(app-pages-browser)/./src/contexts/OrdersContext.tsx":
/*!****************************************!*\
  !*** ./src/contexts/OrdersContext.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrdersProvider: () => (/* binding */ OrdersProvider),\n/* harmony export */   useOrders: () => (/* binding */ useOrders)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useOrders,OrdersProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst OrdersContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useOrders = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(OrdersContext);\n    if (!context) {\n        throw new Error('useOrders must be used within an OrdersProvider');\n    }\n    return context;\n};\n_s(useOrders, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst OrdersProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    // Pagination state\n    const [currentPage, setCurrentPage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [pageSize, setPageSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(5);\n    // Branch state\n    const [branches, setBranches] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            id: 'branch-1',\n            name: 'Matriz São Paulo',\n            code: 'SP001',\n            location: 'São Paulo, SP',\n            active: true\n        },\n        {\n            id: 'branch-2',\n            name: 'Filial Rio de Janeiro',\n            code: 'RJ001',\n            location: 'Rio de Janeiro, RJ',\n            active: true\n        },\n        {\n            id: 'branch-3',\n            name: 'Filial Belo Horizonte',\n            code: 'MG001',\n            location: 'Belo Horizonte, MG',\n            active: true\n        },\n        {\n            id: 'branch-4',\n            name: 'Filial Curitiba',\n            code: 'PR001',\n            location: 'Curitiba, PR',\n            active: true\n        }\n    ]);\n    const [selectedBranch, setSelectedBranch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Filtering state\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [dateRange, setDateRange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        from: undefined,\n        to: undefined\n    });\n    // Handler for page size changes that also resets the current page\n    const handlePageSizeChange = (newSize)=>{\n        setPageSize(newSize);\n        setCurrentPage(1);\n    };\n    // Reset all filters\n    const resetFilters = ()=>{\n        setSearchQuery('');\n        setDateRange({\n            from: undefined,\n            to: undefined\n        });\n        setCurrentPage(1);\n    };\n    const [orders, setOrders] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            id: '#001',\n            orderNumber: '001',\n            branchId: 'branch-1',\n            branchCode: 'SP001',\n            matrixId: 'SP001-001',\n            customer: 'João Silva',\n            email: 'joao@email.com',\n            amount: 1250.00,\n            status: 'pending',\n            date: '2024-01-15',\n            address: 'Rua das Flores, 123 - São Paulo, SP',\n            phone: '(11) 98765-4321',\n            paymentMethod: 'credit',\n            items: [\n                {\n                    name: 'Notebook Dell XPS',\n                    quantity: 1,\n                    price: 950.00\n                },\n                {\n                    name: 'Mouse sem fio',\n                    quantity: 2,\n                    price: 150.00\n                }\n            ],\n            notes: 'Entregar em horário comercial'\n        },\n        {\n            id: '#006',\n            orderNumber: '006',\n            branchId: 'branch-1',\n            branchCode: 'SP001',\n            matrixId: 'SP001-006',\n            customer: 'João Silva',\n            email: 'joao@email.com',\n            amount: 780.50,\n            status: 'approved',\n            date: '2023-11-20',\n            address: 'Rua das Flores, 123 - São Paulo, SP',\n            phone: '(11) 98765-4321',\n            paymentMethod: 'credit',\n            items: [\n                {\n                    name: 'Monitor LED 24\"',\n                    quantity: 1,\n                    price: 780.50\n                }\n            ]\n        },\n        {\n            id: '#012',\n            orderNumber: '012',\n            branchId: 'branch-1',\n            branchCode: 'SP001',\n            matrixId: 'SP001-012',\n            customer: 'João Silva',\n            email: 'joao@email.com',\n            amount: 350.25,\n            status: 'approved',\n            date: '2023-08-05',\n            address: 'Av. Ipiranga, 500 - São Paulo, SP',\n            phone: '(11) 98765-4321',\n            paymentMethod: 'debit',\n            items: [\n                {\n                    name: 'Teclado Mecânico',\n                    quantity: 1,\n                    price: 350.25\n                }\n            ]\n        },\n        {\n            id: '#018',\n            orderNumber: '018',\n            branchId: 'branch-2',\n            branchCode: 'RJ001',\n            matrixId: 'RJ001-018',\n            customer: 'João Silva',\n            email: 'joao@email.com',\n            amount: 2200.00,\n            status: 'approved',\n            date: '2023-05-12',\n            address: 'Rua das Flores, 123 - São Paulo, SP',\n            phone: '(11) 98765-4321',\n            paymentMethod: 'credit',\n            items: [\n                {\n                    name: 'Smartphone iPhone',\n                    quantity: 1,\n                    price: 2200.00\n                }\n            ]\n        },\n        {\n            id: '#025',\n            orderNumber: '025',\n            branchId: 'branch-2',\n            branchCode: 'RJ001',\n            matrixId: 'RJ001-025',\n            customer: 'João Silva',\n            email: 'joao@email.com',\n            amount: 120.00,\n            status: 'rejected',\n            date: '2023-03-18',\n            address: 'Rua Augusta, 1500 - São Paulo, SP',\n            phone: '(11) 98765-4321',\n            paymentMethod: 'cash',\n            items: [\n                {\n                    name: 'Fones de Ouvido',\n                    quantity: 1,\n                    price: 120.00\n                }\n            ],\n            notes: 'Produto não disponível'\n        },\n        {\n            id: '#030',\n            orderNumber: '030',\n            branchId: 'branch-3',\n            branchCode: 'MG001',\n            matrixId: 'MG001-030',\n            customer: 'Maria Santos',\n            email: 'maria@email.com',\n            amount: 1500.00,\n            status: 'approved',\n            date: '2023-12-10',\n            address: 'Av. Paulista, 1000 - São Paulo, SP',\n            phone: '(11) 91234-5678',\n            paymentMethod: 'credit',\n            items: [\n                {\n                    name: 'Tablet Samsung',\n                    quantity: 1,\n                    price: 1500.00\n                }\n            ]\n        },\n        {\n            id: '#036',\n            orderNumber: '036',\n            branchId: 'branch-3',\n            branchCode: 'MG001',\n            matrixId: 'MG001-036',\n            customer: 'Maria Santos',\n            email: 'maria@email.com',\n            amount: 450.75,\n            status: 'approved',\n            date: '2023-09-28',\n            address: 'Av. Rebouças, 750 - São Paulo, SP',\n            phone: '(11) 91234-5678',\n            paymentMethod: 'bank_transfer',\n            items: [\n                {\n                    name: 'Impressora HP',\n                    quantity: 1,\n                    price: 450.75\n                }\n            ]\n        },\n        {\n            id: '#042',\n            orderNumber: '042',\n            branchId: 'branch-4',\n            branchCode: 'PR001',\n            matrixId: 'PR001-042',\n            customer: 'Pedro Costa',\n            email: 'pedro@email.com',\n            amount: 1200.00,\n            status: 'approved',\n            date: '2023-11-05',\n            address: 'Rua Bela Vista, 45 - Rio de Janeiro, RJ',\n            phone: '(21) 98877-6655',\n            paymentMethod: 'credit',\n            items: [\n                {\n                    name: 'Console PlayStation',\n                    quantity: 1,\n                    price: 1200.00\n                }\n            ]\n        },\n        {\n            id: '#048',\n            orderNumber: '048',\n            branchId: 'branch-4',\n            branchCode: 'PR001',\n            matrixId: 'PR001-048',\n            customer: 'Pedro Costa',\n            email: 'pedro@email.com',\n            amount: 300.00,\n            status: 'rejected',\n            date: '2023-07-22',\n            address: 'Av. Atlântica, 200 - Rio de Janeiro, RJ',\n            phone: '(21) 98877-6655',\n            paymentMethod: 'debit',\n            items: [\n                {\n                    name: 'Jogo Digital',\n                    quantity: 1,\n                    price: 300.00\n                }\n            ],\n            notes: 'Cartão recusado'\n        },\n        {\n            id: '#002',\n            orderNumber: '002',\n            branchId: 'branch-1',\n            branchCode: 'SP001',\n            matrixId: 'SP001-002',\n            customer: 'Maria Santos',\n            email: 'maria@email.com',\n            amount: 890.50,\n            status: 'approved',\n            date: '2024-01-14',\n            address: 'Av. Paulista, 1000 - São Paulo, SP',\n            phone: '(11) 91234-5678',\n            paymentMethod: 'debit',\n            items: [\n                {\n                    name: 'Smartphone Samsung',\n                    quantity: 1,\n                    price: 890.50\n                }\n            ]\n        },\n        {\n            id: '#003',\n            orderNumber: '003',\n            branchId: 'branch-1',\n            branchCode: 'SP001',\n            matrixId: 'SP001-003',\n            customer: 'Pedro Costa',\n            email: 'pedro@email.com',\n            amount: 2100.00,\n            status: 'pending',\n            date: '2024-01-14',\n            address: 'Rua Bela Vista, 45 - Rio de Janeiro, RJ',\n            phone: '(21) 98877-6655',\n            paymentMethod: 'bank_transfer',\n            items: [\n                {\n                    name: 'Smart TV 55\"',\n                    quantity: 1,\n                    price: 2100.00\n                }\n            ],\n            notes: 'Confirmar pagamento antes do envio'\n        },\n        {\n            id: '#004',\n            orderNumber: '004',\n            branchId: 'branch-1',\n            branchCode: 'SP001',\n            matrixId: 'SP001-004',\n            customer: 'Ana Oliveira',\n            email: 'ana@email.com',\n            amount: 675.25,\n            status: 'rejected',\n            date: '2024-01-13',\n            address: 'Av. Brasil, 789 - Belo Horizonte, MG',\n            phone: '(31) 97777-8888',\n            paymentMethod: 'credit',\n            items: [\n                {\n                    name: 'Tablet iPad',\n                    quantity: 1,\n                    price: 675.25\n                }\n            ],\n            notes: 'Cartão recusado'\n        },\n        {\n            id: '#005',\n            orderNumber: '005',\n            branchId: 'branch-1',\n            branchCode: 'SP001',\n            matrixId: 'SP001-005',\n            customer: 'Carlos Ferreira',\n            email: 'carlos@email.com',\n            amount: 1500.75,\n            status: 'approved',\n            date: '2024-01-13',\n            address: 'Rua das Palmeiras, 222 - Curitiba, PR',\n            phone: '(41) 96543-2109',\n            paymentMethod: 'cash',\n            items: [\n                {\n                    name: 'Câmera DSLR',\n                    quantity: 1,\n                    price: 1200.75\n                },\n                {\n                    name: 'Tripé',\n                    quantity: 1,\n                    price: 300.00\n                }\n            ]\n        },\n        {\n            id: '#005-RJ',\n            orderNumber: '005',\n            branchId: 'branch-2',\n            branchCode: 'RJ001',\n            matrixId: 'RJ001-005',\n            customer: 'Ana Maria',\n            email: 'ana.maria@email.com',\n            amount: 980.50,\n            status: 'pending',\n            date: '2024-01-12',\n            address: 'Av. Atlântica, 1500 - Rio de Janeiro, RJ',\n            phone: '(21) 99988-7766',\n            paymentMethod: 'credit',\n            items: [\n                {\n                    name: 'Monitor Ultrawide',\n                    quantity: 1,\n                    price: 980.50\n                }\n            ]\n        },\n        {\n            id: '#001-MG',\n            orderNumber: '001',\n            branchId: 'branch-3',\n            branchCode: 'MG001',\n            matrixId: 'MG001-001',\n            customer: 'Ricardo Lima',\n            email: 'ricardo@email.com',\n            amount: 550.00,\n            status: 'approved',\n            date: '2024-01-10',\n            address: 'Rua Sapucaí, 120 - Belo Horizonte, MG',\n            phone: '(31) 99876-5432',\n            paymentMethod: 'debit',\n            items: [\n                {\n                    name: 'Teclado Mecânico',\n                    quantity: 1,\n                    price: 350.00\n                },\n                {\n                    name: 'Mouse Gamer',\n                    quantity: 1,\n                    price: 200.00\n                }\n            ]\n        }\n    ]);\n    const [selectedOrder, setSelectedOrder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const updateOrderStatus = (orderId, newStatus)=>{\n        setOrders((currentOrders)=>currentOrders.map((order)=>order.id === orderId ? {\n                    ...order,\n                    status: newStatus\n                } : order));\n    };\n    const updateOrderStatusWithReason = (orderId, newStatus, reason)=>{\n        setOrders((currentOrders)=>currentOrders.map((order)=>order.id === orderId ? {\n                    ...order,\n                    status: newStatus,\n                    rejectionReason: newStatus === 'rejected' ? reason : order.rejectionReason\n                } : order));\n    };\n    const getOrderById = (id)=>{\n        return orders.find((order)=>order.id === id);\n    };\n    const getCustomerOrders = (customerName)=>{\n        // Apply branch filter if selected\n        const branchFilteredOrders = selectedBranch ? orders.filter((order)=>order.branchId === selectedBranch) : orders;\n        return branchFilteredOrders.filter((order)=>order.customer === customerName);\n    };\n    // Branch system functions\n    const setBranch = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"OrdersProvider.useCallback[setBranch]\": (branchId)=>{\n            setSelectedBranch(branchId);\n            // Reset to page 1 when changing branch\n            setCurrentPage(1);\n        }\n    }[\"OrdersProvider.useCallback[setBranch]\"], []);\n    // Get orders for a specific branch\n    const getOrdersByBranch = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"OrdersProvider.useCallback[getOrdersByBranch]\": (branchId)=>{\n            return orders.filter({\n                \"OrdersProvider.useCallback[getOrdersByBranch]\": (order)=>order.branchId === branchId\n            }[\"OrdersProvider.useCallback[getOrdersByBranch]\"]);\n        }\n    }[\"OrdersProvider.useCallback[getOrdersByBranch]\"], [\n        orders\n    ]);\n    // Get orders for currently selected branch\n    const getBranchOrders = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"OrdersProvider.useCallback[getBranchOrders]\": ()=>{\n            if (!selectedBranch) return orders;\n            return getOrdersByBranch(selectedBranch);\n        }\n    }[\"OrdersProvider.useCallback[getBranchOrders]\"], [\n        orders,\n        selectedBranch,\n        getOrdersByBranch\n    ]);\n    // Get all orders with the same order number across all branches\n    const getOrdersByNumber = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"OrdersProvider.useCallback[getOrdersByNumber]\": (orderNumber)=>{\n            return orders.filter({\n                \"OrdersProvider.useCallback[getOrdersByNumber]\": (order)=>order.orderNumber === orderNumber\n            }[\"OrdersProvider.useCallback[getOrdersByNumber]\"]);\n        }\n    }[\"OrdersProvider.useCallback[getOrdersByNumber]\"], [\n        orders\n    ]);\n    // Get order by matrix ID\n    const getOrderByMatrixId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"OrdersProvider.useCallback[getOrderByMatrixId]\": (matrixId)=>{\n            return orders.find({\n                \"OrdersProvider.useCallback[getOrderByMatrixId]\": (order)=>order.matrixId === matrixId\n            }[\"OrdersProvider.useCallback[getOrderByMatrixId]\"]);\n        }\n    }[\"OrdersProvider.useCallback[getOrderByMatrixId]\"], [\n        orders\n    ]);\n    // Generate unique order number for a specific branch\n    const generateOrderNumber = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"OrdersProvider.useCallback[generateOrderNumber]\": (branchId)=>{\n            const branchOrders = orders.filter({\n                \"OrdersProvider.useCallback[generateOrderNumber].branchOrders\": (order)=>order.branchId === branchId\n            }[\"OrdersProvider.useCallback[generateOrderNumber].branchOrders\"]);\n            // Find the highest order number in this branch\n            const maxNumber = branchOrders.reduce({\n                \"OrdersProvider.useCallback[generateOrderNumber].maxNumber\": (max, order)=>{\n                    // Extract numeric part from orderNumber\n                    const orderNum = parseInt(order.orderNumber.replace(/\\D/g, ''));\n                    return orderNum > max ? orderNum : max;\n                }\n            }[\"OrdersProvider.useCallback[generateOrderNumber].maxNumber\"], 0);\n            // Format as 3-digit number with leading zeros\n            return \"\".concat(String(maxNumber + 1).padStart(3, '0'));\n        }\n    }[\"OrdersProvider.useCallback[generateOrderNumber]\"], [\n        orders\n    ]);\n    // Generate matrix ID combining branch code and order number\n    const generateMatrixId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"OrdersProvider.useCallback[generateMatrixId]\": (branchCode, orderNumber)=>{\n            return \"\".concat(branchCode, \"-\").concat(orderNumber);\n        }\n    }[\"OrdersProvider.useCallback[generateMatrixId]\"], []);\n    // Filter orders by search query and date range\n    const filteredBySearchAndDate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"OrdersProvider.useMemo[filteredBySearchAndDate]\": ()=>{\n            return orders.filter({\n                \"OrdersProvider.useMemo[filteredBySearchAndDate]\": (order)=>{\n                    // Search filter\n                    const searchMatch = !searchQuery || order.id.toLowerCase().includes(searchQuery.toLowerCase()) || order.customer.toLowerCase().includes(searchQuery.toLowerCase());\n                    // Date range filter\n                    const orderDate = new Date(order.date);\n                    const dateMatch = (!dateRange.from || orderDate >= dateRange.from) && (!dateRange.to || orderDate <= new Date(dateRange.to.getTime() + 86400000)); // Add 1 day to include the end date fully\n                    return searchMatch && dateMatch;\n                }\n            }[\"OrdersProvider.useMemo[filteredBySearchAndDate]\"]);\n        }\n    }[\"OrdersProvider.useMemo[filteredBySearchAndDate]\"], [\n        orders,\n        searchQuery,\n        dateRange\n    ]);\n    // Get filtered orders by status, search, and date\n    const filteredOrders = (status)=>{\n        if (!status) return filteredBySearchAndDate;\n        return filteredBySearchAndDate.filter((order)=>order.status === status);\n    };\n    // Calculate pagination data based on filtered results\n    const totalItems = filteredBySearchAndDate.length;\n    const totalPages = Math.ceil(totalItems / pageSize);\n    // Get paginated orders\n    const paginatedOrders = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"OrdersProvider.useMemo[paginatedOrders]\": ()=>{\n            const startIndex = (currentPage - 1) * pageSize;\n            const endIndex = startIndex + pageSize;\n            return filteredBySearchAndDate.slice(startIndex, endIndex);\n        }\n    }[\"OrdersProvider.useMemo[paginatedOrders]\"], [\n        filteredBySearchAndDate,\n        currentPage,\n        pageSize\n    ]);\n    // Pagination config object\n    const pagination = {\n        pageSize,\n        currentPage,\n        totalItems,\n        totalPages\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(OrdersContext.Provider, {\n        value: {\n            orders,\n            setOrders,\n            updateOrderStatus,\n            updateOrderStatusWithReason,\n            selectedOrder,\n            setSelectedOrder,\n            getOrderById,\n            getCustomerOrders,\n            pagination,\n            paginatedOrders,\n            setCurrentPage,\n            setPageSize: handlePageSizeChange,\n            filteredOrders,\n            searchQuery,\n            setSearchQuery,\n            dateRange,\n            setDateRange,\n            resetFilters,\n            filteredBySearchAndDate,\n            // Branch system\n            branches,\n            selectedBranch,\n            setBranch,\n            getOrdersByBranch,\n            getBranchOrders,\n            getOrderByMatrixId,\n            getOrdersByNumber,\n            generateOrderNumber,\n            generateMatrixId\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/joaosantos/WebstormProjects/wdc-web-panel/src/contexts/OrdersContext.tsx\",\n        lineNumber: 527,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(OrdersProvider, \"2qBSzS6cECfaCUDxjl4g5d1vMsQ=\");\n_c = OrdersProvider;\nvar _c;\n$RefreshReg$(_c, \"OrdersProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/OrdersContext.tsx\n"));

/***/ })

});